#!/bin/bash
set -e 

POSTGRESQL_USER=${POSTGRESQL_USER:-"docker"}
POSTGRESQL_PASS=${POSTGRESQL_PASS:-"docker"}
POSTGRESQL_DB=${POSTGRESQL_DB:-"docker"}

POSTGRESQL_BIN=/usr/lib/postgresql/8.4/bin/psql
POSTGRESQL_SINGLE="sudo -u postgres $POSTGRESQL_BIN "
POSTGRESQL_DATA=/var/lib/postgresql/8.4/main

sudo -u postgres mkdir $POSTGRESQL_DATA/sde
sudo -u postgres chmod 0700 $POSTGRESQL_DATA/sde

$POSTGRESQL_SINGLE postgres << EOT  
CREATE ROLE sde LOGIN PASSWORD 'sde4dmin' SUPERUSER NOINHERIT CREATEDB;
CREATE TABLESPACE sde OWNER sde LOCATION '$POSTGRESQL_DATA/sde';
CREATE DATABASE $POSTGRESQL_DB OWNER sde ENCODING 'UTF8' TABLESPACE sde TEMPLATE template_postgis;
GRANT ALL ON DATABASE $POSTGRESQL_DB TO sde;
GRANT CONNECT ON DATABASE $POSTGRESQL_DB TO public;
EOT

$POSTGRESQL_SINGLE $POSTGRESQL_DB << EOT
CREATE SCHEMA sde AUTHORIZATION sde;
GRANT ALL ON SCHEMA sde TO sde;
GRANT USAGE ON SCHEMA sde TO public;

CREATE USER $POSTGRESQL_USER WITH SUPERUSER; 
ALTER USER $POSTGRESQL_USER WITH PASSWORD '$POSTGRESQL_PASS'; 
CREATE SCHEMA $POSTGRESQL_USER AUTHORIZATION $POSTGRESQL_USER;
GRANT ALL ON SCHEMA $POSTGRESQL_USER TO sde;
GRANT USAGE ON SCHEMA $POSTGRESQL_USER TO public;

GRANT SELECT, INSERT, UPDATE, DELETE ON TABLE public.geometry_columns TO sde;
GRANT SELECT ON TABLE public.spatial_ref_sys TO sde;
EOT
